@model Capstone_Project.Models.Talent
<link href="@Url.Content("~/Css.css")" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Create";
}
<div class="navbar navbar-inverse navbar-fixed-top">
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">

            <div class="navbar-collapse collapse" id="myNavbar">


            </div>
        </div>
    </nav>
</div>
<h2>Signup</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>


    @Html.TextBoxFor(model => model.LoginLogin_ID, new { @Value = ViewBag.lastId, @type = "hidden" })
    @Html.ValidationMessageFor(model => model.LoginLogin_ID, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.Label("Email address", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Home Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HomePhoneNum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HomePhoneNum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Cell Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CellPhoneNum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CellPhoneNum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Birth Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                     {
                        new SelectListItem{ Text="Male", Value = "Male" },
                        new SelectListItem{ Text="Female", Value = "Female" },
                        new SelectListItem{ Text="Other", Value = "Other" }
                     }, null, htmlAttributes :new { @class = "form-control" })
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Weight", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Height", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Eye Color", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.HairColor, new List<SelectListItem>
                     {
                        new SelectListItem{ Text="Blue", Value = "Blue" },
                        new SelectListItem{ Text="Brown", Value = "Brown" },
                        new SelectListItem{ Text="Green", Value = "Green" },
                        new SelectListItem{ Text="Grey", Value = "Grey" }
                     }, null, htmlAttributes :new { @class = "form-control" })
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.HairColor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Hair Color", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.HairColor, new List<SelectListItem>
                     {
                        new SelectListItem{ Text="Bald", Value = "Bald" },
                        new SelectListItem{ Text="Blonde", Value = "Blonde" },
                        new SelectListItem{ Text="Brown", Value = "Brown" },
                        new SelectListItem{ Text="Black", Value = "Black" },
                        new SelectListItem{ Text="Dreds", Value = "Dreds" },
                        new SelectListItem{ Text="Red", Value = "Red" },
                        new SelectListItem{ Text="Grey", Value = "Grey" },
                        new SelectListItem{ Text="White", Value = "White" }
                     }, null, htmlAttributes :new { @class = "form-control" })
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.HairColor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Union Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.UnionStatus, new List<SelectListItem>
                     {
                        new SelectListItem{ Text="Full", Value = "Full" },
                        new SelectListItem{ Text="Apprentice", Value = "Apprentice" },
                        new SelectListItem{ Text="AABP", Value = "AABP" },
                        new SelectListItem{ Text="Non-Union", Value = "Non-Union" }
                     }, null, htmlAttributes :new { @class = "form-control" })
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.UnionStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("SIN", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SIN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SIN, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Ethnic Origin", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.EthinicOrigin, new List<SelectListItem>
                     {
                        new SelectListItem{ Text="Caucasian", Value = "Caucasian" },
                        new SelectListItem{ Text="Black", Value = "Black" },
                        new SelectListItem{ Text="Asian", Value = "Asian" },
                        new SelectListItem{ Text="Indian", Value = "Indian" },
                        new SelectListItem{ Text="Latino", Value = "Latino" },
                        new SelectListItem{ Text="Mid-East", Value = "Mid-East" },
                        new SelectListItem{ Text="First Nation", Value = "First Nation" }
                     }, null, htmlAttributes :new { @class = "form-control" })
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.EthinicOrigin, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Number of requests", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumOfRequest, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumOfRequest, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="text-align:left">
        @Html.Label("Number of hired", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumOfHired, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumOfHired, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="text-align:left">
        @Html.Label("Car Make", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CarMake, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CarMake, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="text-align:left">
        @Html.Label("Car Model", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CarModel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CarModel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="text-align:left">
        @Html.Label("Car Year", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CarYear, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CarYear, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="text-align:left">
        @Html.Label("Car Color", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CarColor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CarColor, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

